#!/usr/bin/perl

while (<>) {
	chomp;
	($l1, $p1, $l2, $p2, $l3, $p3) = split(/ /);
	($y[$l1], $x[$l1]) = split(/,/, $p1);
	($y[$l2], $x[$l2]) = split(/,/, $p2);
	($y[$l3], $x[$l3]) = split(/,/, $p3);

	$neighbor{$l1}{$l2} = 1;
	$neighbor{$l1}{$l3} = 1;
	$neighbor{$l2}{$l1} = 1;
	$neighbor{$l2}{$l3} = 1;
	$neighbor{$l3}{$l1} = 1;
	$neighbor{$l3}{$l1} = 1;

	@t = ( $l1, $l2, $l3 );
	push @tris, [@t];
}

for ($outer = 0; $outer < 10; $outer++) {
	$xmax = $ymax = -999999;
	$xmin = $ymin = 999999;
	for ($i = 0; $i <= $#x; $i++) {
		next unless defined($x[$i]);

		if ($x[$i] > $xmax) { $xmax = $x[$i]; }
		if ($y[$i] > $ymax) { $ymax = $y[$i]; }
		if ($x[$i] < $xmin) { $xmin = $x[$i]; }
		if ($y[$i] < $ymin) { $ymin = $y[$i]; }
	}
	if ($xmax - $xmin > $ymax - $ymin) {
		$scale = $xmax - $xmin;
	} else {
		$scale = $ymax - $ymin;
	}

	if (1) {
		print "0 setlinewidth\n";
		for ($i = 0; $i <= $#x; $i++) {
			next unless defined($x[$i]);

			for $k (keys (%{$neighbor{$i}})) {
				printf("%.6f %.6f moveto %.6f %.6f lineto stroke\n",
					($x[$i] - $xmin) * 612 / ($xmax - $xmin),
					($y[$i] - $ymin) * 612 / ($ymax - $ymin),
					($x[$k] - $xmin) * 612 / ($xmax - $xmin),
					($y[$k] - $ymin) * 612 / ($ymax - $ymin));
			}
		}
		print "showpage\n";
	}

	if (0) {
		for ($i = 0; $i <= $#tris; $i++) {
			@t = @{$tris[$i]};

			$xc = 0;
			$yc = 0;
			$count = 0;
			for ($j = 0; $j <= $#t; $j++) {
				$xc += $x[$t[$j]];
				$yc += $y[$t[$j]];
				$count++;
			}
			$xc /= $count;
			$yc /= $count;

			$big = -1;
			$bigdist = 0;
			for ($j = 0; $j <= $#t; $j++) {
				$xd = $x[$t[$j]] - $xc;
				$yd = $y[$t[$j]] - $yc;
				$dist[$j] = sqrt($xd * $xd + $yd * $yd);

				if ($dist[$j] > $bigdist) {
					$bigdist = $dist[$j];
					$big = $j;
				}

				# print "$i: $j: $x[$t[$j]],$y[$t[$j]] from $xc,$yc: $dist[$j]\n";
			}

			$x[$t[$big]] = $xc;
			$y[$t[$big]] = $yc;
		}
	}

	if (1) {
		for ($i = 0; $i <= $#x; $i++) {
			next unless defined($x[$i]);

			$xsum = 0;
			$ysum = 0;
			$count = 0;

			for $k (keys (%{$neighbor{$i}})) {
				$xsum += $x[$k];
				$ysum += $y[$k];
				$count++;
			}

			# print "$i: $x[$i],$y[$i] has $count ";

			$x[$i] = $xsum / $count;
			$y[$i] = $ysum / $count;

			# print "to $x[$i],$y[$i]\n";
		}
	}
}
